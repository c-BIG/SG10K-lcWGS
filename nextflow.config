// global configuration
manifest {
  name = 'SG10K-lcWGS'
  author = 'Justin Jeyakani, Mar Gonzalez-Porta, Maxime HEBRARD, Kevin Nathanael Ramanto, Nicolas Bertin'
  homePage = 'https://github.com/c-BIG/SG10K-lcWGS'
  description = 'Nextflow SG10K-lcWGS reference panel generation.'
  mainScript = 'main.nf'
  nextflowVersion = '!>=23.04.1'
  version = '0.2.0'
}

// cleanup = true

params {

    // output
    outdir = "."
    publishdir = "${params.outdir}"
    info_dir = "${params.outdir}/pipeline_info"
    publish_mode = 'copy'

    // help
    params.help = null

}

// launch info

trace {
    enabled = true
    overwrite = true
    file = "${params.info_dir}/trace.txt"
}

// generate timeline

timeline {
    enabled = true
    overwrite = true
    file = "${params.info_dir}/timeline.html"
}

report {
    enabled = true
    overwrite = true
    file = "${params.info_dir}/report.html"
}

dag {
	enabled = true
        overwrite = true
	file = "${params.info_dir}/dag.html"
}


// s3
plugins {
	id "nf-amazon"
}

// https://github.com/nextflow-io/nextflow/issues/2150
aws.client.downloadParallel = true
aws.client.downloadNumWorkers = 20
aws.client.maxConnections = 4
aws.batch.maxParallelTransfers = 8

executor.queueSize = 10000
	
// docker
// process.container =  "cbig/sg10k-lcwgs:v${manifest.version}"
process.container =  "justinjeyakani/sg10k-lcwgs:v${manifest.version}"

docker.enabled = true
// docker.fixOwnership = true
docker.runOptions = '-u \$(id -u):\$(id -g)'

docker.tmp = "auto"

wave {
  enabled = true
}


// launch profiles
profiles {
	local {
		process.executor = "local"
		process.container = "sg10k-lcwgs:latest"
		process.errorStrategy = "finish"
		//process.maxRetries = 1
	}
}

// process resources
process {

    shell = [ '/bin/bash', '-euo', 'pipefail' ]

        errorStrategy = 'retry'
        maxRetries = 1

        withName: 'refpanel' {
                cpus = 64 
                disk = '500 GB'
                memory = { 64.GB * task.attempt }
                publishDir = [
                    path: "${params.publishdir}/results",
                    mode: params.publish_mode,
                ]
        }
        withName: 'countpanel' {
                cpus = 16
                memory = "4 GB"
                publishDir = [
                    path: "${params.publishdir}/results/counts",
                    mode: params.publish_mode,
                ]
        }
        withName: 'af_dist' {
                cpus = 64
                disk = '500 GB'
                memory = "120 GB"
                publishDir = [
                    path: "${params.publishdir}/results/af_dist",
                    mode: params.publish_mode,
                ]
        }
        withName: 'phasing' {
                cpus = 64
                disk = '500 GB'
                memory = { 240.GB * task.attempt }
                publishDir = [
                    path: "${params.publishdir}/results/phasing",
                    mode: params.publish_mode,
                ]
        }
        withName: 'phasingrare' {
                cpus = 64
                disk = '300 GB'
                memory = { 240.GB * task.attempt }
                publishDir = [
                    path: "${params.publishdir}/results/phasingrare",
                    mode: params.publish_mode,
                ]
        }
        withName: 'phasingcommon' {
                cpus = 120
                disk = '300 GB'
                memory = { 256.GB * task.attempt }
                publishDir = [
                    path: "${params.publishdir}/results/phasingcommon",
                    mode: params.publish_mode,
                ]
        }
        withName: 'ligatecommon' {
                cpus = 16
                disk = '16 GB'
                memory = { 256.GB * task.attempt }
                publishDir = [
                    path: "${params.publishdir}/results/ligatecommon",
                    mode: params.publish_mode,
                ]
        }
        withName: 'vcftobcf' {
                cpus = 64
                disk = '600 GB'
                memory = { 32.GB * task.attempt }
                publishDir = [
                    path: "${params.publishdir}/results/vcftobcf",
                    mode: params.publish_mode,
                ]
        }
        withName: 'testcommon' {
                cpus = 60
                disk = '300 GB'
                memory = { 180.GB * task.attempt }
                publishDir = [
                    path: "${params.publishdir}/results/testcommon",
                    mode: params.publish_mode,
                ]
        }
        withName: 'testligate' {
                cpus = 16
                disk = '300 GB'
                memory = { 16.GB * task.attempt }
                publishDir = [
                    path: "${params.publishdir}/results/testligate",
                    mode: params.publish_mode,
                ]
        }
        withName: 'testrare' {
                cpus = 60
                disk = '300 GB'
                memory = { 120.GB * task.attempt }
                publishDir = [
                    path: "${params.publishdir}/results/testrare",
                    mode: params.publish_mode,
                ]
        }
        withName: 'testconcat' {
                cpus = 16
                disk = '280 GB'
                memory = { 16.GB * task.attempt }
                publishDir = [
                    path: "${params.publishdir}/results/testrare",
                    mode: params.publish_mode,
                ]
        }
        withName:impute_phase {
                cpus = 2
                memory = "6 GB"
        }
        withName:impute_ligate {
                cpus = 1
                memory = "1 GB"
        }
        withName:impute_concat {
                cpus = 1
                memory = "1 GB"
        }
}
